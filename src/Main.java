import java.io.*;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {

        /* Предложение создать файл с вопросами или пройти анкетирование  */
        System.out.println(" Выберите действие: \n" + "1. Создать файл с вопросами для анкетирования \n" + "2. Пройти анкетирование ");
        // Создаем сканнер  для получения ответа от пользователя
        Scanner scr = new Scanner(System.in);
        Scanner scr1 = new Scanner(System.in);

        int variant = scr.nextInt();
        switch (variant) {
            case 1: {
                System.out.println("Введите имя файла с вопросами  например \" vopros_po_anatomy \"  ");
                String nameNewFile = scr1.nextLine();

                File file = new File(nameNewFile + ".txt"); // создаем файл где имя файла это комбинация id + расширение файла (.txt)
                if (!file.exists() || !file.equals(file)) {       // проверяем файл на  наличие и уникальность имени файла
                    file.createNewFile();//   если все впорядке создаем файл и  записываем вопросы

                    // создаем цикл который записывает вопросы в созданный файл  до тех пор, пока  не введут слово stop
                    /* для  цикла потребуется поток  и сканнер */
                    System.out.println("Построчно вводите вопросы и в конце вопроса нажимайте Entr\nДля завершения списка вопросов введите слово stop ");
                    // cоздаем поток для чтения вопросов из консоли
                    // создаем потоки для считывания ответов с консоли и  для записи считанного в файл
                    BufferedReader bufReader = new BufferedReader(new InputStreamReader(System.in)); // читаем с консоли
                    BufferedWriter bufWriter = new BufferedWriter(new FileWriter(file)); // пишем в файл

                    // Создаем цикл который записывает варианты и делает перенос строки  ПРОБЛЕМА РЕШЕНА ЦИКЛОМ ДУ ВАЙЛ
                    String str;
                    do {
                        str = bufReader.readLine();  // строка равна тому что вводится в консоль
                        if (str.compareTo("stop") == 0)
                            break;   // если введено стоп присваивается  ноль и выход из цикла
                        str = str + "\n";                        // строка с пе1реносом
                        bufWriter.write(str);                    // запись строки
                    } while (str.compareTo("stop") != 0);      // повторять пока  не введено стоп или не равно нулю


                    // закрытие потоков
                    bufReader.close();
                    bufWriter.close();
                    scr.close();
                    scr1.close();

                } else {
                    System.out.println("Файл с таким именем существует");
                    return; // выйти из условия без продолжения программы
                }
            }
            break;
            case 2:

                // Внимание! для корректной работы программы  файл с вопросами  должен существовать в данном примере  имя и расширение файла vopros.txt  Расположеный в корне.
                // Шаг 1. Создаем буферизированный символьный поток bufR, в аргументы передаем байтовый поток и в его аргументы  указываем путь (консоль).
                BufferedReader bufR = new BufferedReader(new InputStreamReader(System.in));
                // Шаг 2. Ппредлагаем пользователю задать id  идентификатор, который станет частью имени файла с данными
                System.out.println("Введите ID"); // предлагаем ввести  id
                /* Шаг 3.   Создание файла с именем пользователя и в формате txt
                 * Проверка файла на существование и уникальность имени (если файл с id существует программа выводит соообщение об этом и прекращает работу)
                 */
                String id = bufR.readLine(); // сохраняем  веденную через бафридер переменную в  строку (id  будет служить именем файла )
                File file = new File(id + ".txt"); // создаем файл где имя файла это комбинация id + расширение файла (.txt)
                if (!file.exists() || !file.equals(file)) {       // проверяем файл на  наличие и уникальность имени файла
                    file.createNewFile();                       //   если все впорядке создаем файл и  приступаем к  анкетированию
                } else {
                    System.out.println("Анкета с таким ID уже существует");
                    return; // выйти из условия без продолжения программы
                }
                /* Шаг 4. Открываем байтовый потокс указанием пути к файлу где содержатся вопросы  расположенные построчно
                 * Создаем байтовый поток с указанием пути к файлу для сканера
                 * Создаем сканнер, который будет считывать построчно  из файла в цикле while и в аргументысканнеру передаем байтовый поток
                 * Создаем буферизированный символьный поток для записи ответов пользователя в файл
                 */
                FileInputStream fis = new FileInputStream("vopros.txt");  // открываем байтовый поток к файлу с вопросами ( программой предполагается! что файл с вопросами существует)
                Scanner scanner = new Scanner(fis);                              // Создаем сканнер , который будет считывать вопросы из указанного потока

                BufferedWriter bufW = new BufferedWriter(new FileWriter(file));  // Создаем поток для записи ответов  и указываем файл, который был создан (Шаг 3)
                /* Шаг 5.   добавляем первую  запись в файл  с id и делаем перевод строки
                 * Шаг 6. в цикле while  Сканнером выводить данные построчно
                 * Создаем  переменную в которую будем записывать вопросы из списка, чтобы дублировать их в файле с ответами
                 * Выводим вопрос сканнером и срау его записываем в переменную vopros
                 * Записываем вопрос и ответ в файл
                 * */
                bufW.write("Идентификатор анкетируемого " + id + "\n"); // Запись идентификатора в файл

                while ((scanner.hasNext())) {     // в цикле выводим вопросы построчно чередуя с ответами
                    String vopros;               //  создаем переменую для  дублирования вопросов при записи с ответами
                    System.out.println(vopros = scanner.nextLine());       // считываем вопрос посточно
                    bufW.write(vopros + " " + bufR.readLine() + "\n"); // записываем вопрос и ответ в  файл

                }

                //  Шаг 7 закрываем все потоки
                bufR.close();
                bufW.close();
                scanner.close();
        }


    }

}

